
:doc:`Frame <index>`  append
****************************

------


.. function:: append(self, data)

    Adds more data to the current frame.


    :Parameters:

        **data** : Data source

        ..

            Data source, see :doc:`Data Sources </python_api/datasources/index>`


    Examples
    --------
    Given a frame with a single column, *col_1*:

    .. code::

            >>> my_frame.inspect(4)
              col_1:str
            /-----------/
              dog
              cat
              bear
              donkey

      and a frame with two columns, *col_1* and *col_2*:

      ..code::

            >>> your_frame.inspect(4)
              col_1:str  col_qty:int32
            /--------------------------/
              bear          15
              cat            2
              snake          8
              horse          5

    Column *col_1* means the same thing in both frames.
    The Frame *my_frame* points to the first frame and *your_frame* points
    to the second.
    To add the contents of *your_frame* to *my_frame*:

    .. code::

        >>> my_frame.append(your_frame)
        >>> my_frame.inspect(8)
          col_1:str  col_2:int32
        /------------------------/
          dog           None
          bear            15
          bear          None
          horse            5
          cat           None
          cat              2
          donkey        None
          snake            5

    Now the first frame has two columns, *col_1* and *col_2*.
    Column *col_1* has the data from *col_1* in both original frames.
    Column *col_2* has None (undefined) in all of the rows in the original
    first frame, and has the value of the second frame column, *col_2*, in
    the rows matching the new data in *col_1*.

    Breaking it down differently, the original rows referred to by
    *my_frame* have a new column, *col_2*, and this new column is filled
    with non-defined data.
    The frame referred to by *your_frame*, is then added to the bottom.

