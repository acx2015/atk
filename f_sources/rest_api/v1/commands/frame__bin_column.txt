

----------------------------------------
:doc:`Commands <index>` frame/bin_column
----------------------------------------

Classify data into user-defined groups.

POST /v1/commands/
==================

GET /v1/commands/:id
====================

Request
-------

**Route** ::

  POST /v1/commands/

**Body**



:name:

    frame/bin_column

:arguments:


    **frame** : Frame

    ..

        <Missing Description>



    **column_name** : unicode

    ..

        Name of the column to bin.



    **cutoffs** : list

    ..

        Array of values containing bin cutoff points.
        Array can be list or tuple.
        Array values must be progressively increasing.
        All bin boundaries must be included, so, with N bins, you need N+1 values.



    **include_lowest** : bool (default=None)

    ..

        Specify how the boundary conditions are handled.
        True indicates that the lower bound of the bin is inclusive.
        False indicates that the upper bound is inclusive.
        Default is True.



    **strict_binning** : bool (default=None)

    ..

        Specify how values outside of the cutoffs array should be binned.
        If set to True, each value less than cutoffs[0] or greater than
        cutoffs[-1] will be assigned a bin value of -1.
        If set to False, values less than cutoffs[0] will be included in the first
        bin while values greater than cutoffs[-1] will be included in the final
        bin.



    **bin_column_name** : unicode (default=None)

    ..

        The name for the new binned column.
        Default is ``<column_name>_binned``.



|

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

**Description**

Summarize rows of data based on the value in a single column by sorting them
into bins, or groups, based on a list of bin cutoff points.

Notes
-----
1)  Unicode in column names is not supported and will likely cause the
    drop_frames() method (and others) to fail!
2)  Bins IDs are 0-index: the lowest bin number is 0.
3)  The first and last cutoffs are always included in the bins.
    When include_lowest is ``True``, the last bin includes both cutoffs.
    When include_lowest is ``False``, the first bin (bin 0) includes both
    cutoffs.

|

Response
--------

**Status** ::

  200 OK

**Body**

Returns information about the command.  See the Response Body for Get Command here below.  It is the same.


GET /v1/commands/:id
====================

Request
-------

**Route** ::

  GET /v1/commands/18

**Body**

(None)

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

Response
--------

**Status** ::

  200 OK

**Body**


``dict``




